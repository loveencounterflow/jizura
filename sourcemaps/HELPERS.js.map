{"version":3,"sources":["HELPERS.coffee"],"names":[],"mappings":"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","file":"HELPERS.js","sourceRoot":"/source/","sourcesContent":["\n\n\n\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/HELPERS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#-----------------------------------------------------------------------------------------------------------\nXNCHR                     = require './XNCHR'\nASYNC                     = require 'async'\n#...........................................................................................................\nD                         = require 'pipedreams'\n$                         = D.remit.bind D\n$async                    = D.remit_async.bind D\n#...........................................................................................................\noptions                   = require './options'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@provide_tmp_folder = ->\n  njs_fs.mkdirSync options[ 'tmp-home' ] unless njs_fs.existsSync options[ 'tmp-home' ]\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@new_layout_info = ( source_route ) ->\n  pdf_command         = options[ 'pdf-command' ]\n  tmp_home            = options[ 'tmp-home' ]\n  source_locator      = njs_path.resolve process.cwd(), source_route\n  source_home         = njs_path.dirname source_locator\n  source_name         = njs_path.basename source_locator\n  tex_locator         = njs_path.join tmp_home, CND.swap_extension source_name, '.tex'\n  aux_locator         = njs_path.join tmp_home, CND.swap_extension source_name, '.aux'\n  pdf_source_locator  = njs_path.join tmp_home, CND.swap_extension source_name, '.pdf'\n  pdf_target_locator  = njs_path.join source_home, CND.swap_extension source_name, '.pdf'\n  #.........................................................................................................\n  R =\n    'pdf-command':          pdf_command\n    'tmp-home':             tmp_home\n    'source-route':         source_route\n    'source-locator':       source_locator\n    'source-home':          source_home\n    'source-name':          source_name\n    'tex-locator':          tex_locator\n    'aux-locator':          aux_locator\n    'pdf-source-locator':   pdf_source_locator\n    'pdf-target-locator':   pdf_target_locator\n    'latex-run-count':      0\n  #.........................................................................................................\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@write_pdf = ( layout_info, handler ) ->\n  #.........................................................................................................\n  pdf_command         = layout_info[ 'pdf-command'          ]\n  tmp_home            = layout_info[ 'tmp-home'             ]\n  tex_locator         = layout_info[ 'tex-locator'          ]\n  aux_locator         = layout_info[ 'aux-locator'          ]\n  pdf_source_locator  = layout_info[ 'pdf-source-locator'   ]\n  pdf_target_locator  = layout_info[ 'pdf-target-locator'   ]\n  last_digest         = null\n  last_digest         = CND.id_from_route aux_locator if njs_fs.existsSync aux_locator\n  digest              = null\n  count               = 0\n  #.........................................................................................................\n  pdf_from_tex = ( next ) =>\n    count += 1\n    urge \"run ##{count} #{pdf_command}\"\n    whisper \"$1: #{tmp_home}\"\n    whisper \"$2: #{tex_locator}\"\n    CND.spawn pdf_command, [ tmp_home, tex_locator, ], ( error, data ) =>\n      error = undefined if error is 0\n      if error?\n        alert error\n        return handler error\n      digest = CND.id_from_route aux_locator\n      if digest is last_digest\n        echo ( CND.grey badge ), CND.lime \"done.\"\n        layout_info[ 'latex-run-count' ] = count\n        ### TAINT move pdf to layout_info[ 'source-home' ] ###\n        handler null\n      else\n        last_digest = digest\n        next()\n  #.........................................................................................................\n  ASYNC.forever pdf_from_tex\n\n\n#===========================================================================================================\n# TYPO\n#-----------------------------------------------------------------------------------------------------------\n@TYPO = {}\n\n#-----------------------------------------------------------------------------------------------------------\n@TYPO._escape_replacements = [\n  [ ///  \\\\         ///g,  '\\\\textbackslash{}',     ]\n  [ ///  \\{         ///g,  '\\\\{',                   ]\n  [ ///  \\}         ///g,  '\\\\}',                   ]\n  [ ///  \\$         ///g,  '\\\\$',                   ]\n  [ ///  \\#         ///g,  '\\\\#',                   ]\n  [ ///  %          ///g,  '\\\\%',                   ]\n  [ ///  _          ///g,  '\\\\_',                   ]\n  [ ///  \\^         ///g,  '\\\\textasciicircum{}',   ]\n  [ ///  ~          ///g,  '\\\\textasciitilde{}',    ]\n  [ ///  ‰          ///g, '\\\\permille{}',           ]\n  [ ///  &amp;      ///g, '\\\\&',                    ]\n  [ ///  &quot;     ///g, '\"',                      ]\n  [ ///  '([^\\s]+)’ ///g, '‘$1’',                   ]\n  [ ///  (^|[^\\\\])& ///g, '\\\\&',                    ]\n  # [ ///  &   ///g,  '\\\\&',                  ]\n  # [ ///  ([^\\\\])&   ///g,  '$1\\\\&',                  ]\n  # '`'   # these two are very hard to catch when TeX's character handling is switched on\n  # \"'\"   #\n  ]\n\n#-----------------------------------------------------------------------------------------------------------\n@TYPO.escape_for_tex = ( text ) =>\n  R = text\n  R = R.replace matcher, replacement for [ matcher, replacement, ] in @TYPO._escape_replacements\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@TYPO.$fix_typography_for_tex = =>\n  return $ ( event, send ) =>\n    [ type, tail..., ] = event\n    if type is 'text'\n      send [ 'text', ( @TYPO.as_tex_text tail[ 0 ] ), ]\n    else\n      send event\n\n# #-----------------------------------------------------------------------------------------------------------\n# @TYPO.supply_cjk_markup = =>\n#   tag_stack = []\n#   #.........................................................................................................\n#   return $ ( event, send ) =>\n#     [ type, tail..., ] = event\n#     return send event unless type is 'text'\n#     text  = tail[ 0 ]\n#     tex   = H1.cjk_as_tex_text text\n#     # tex   = tex.replace /\\\\latin\\{([^]+)\\}/g, '$1'\n#     send [ 'tex', tex, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@TYPO.as_tex_text = ( text, settings ) =>\n  ### An improved version of `XELATEX.tag_from_chr` ###\n  settings             ?= options\n  glyph_styles          = settings[ 'tex' ]?[ 'glyph-styles'             ] ? {}\n  tex_command_by_rsgs   = settings[ 'tex' ]?[ 'tex-command-by-rsgs'      ]\n  last_command          = null\n  R                     = []\n  stretch               = []\n  last_tag_name         = null\n  #.........................................................................................................\n  unless tex_command_by_rsgs?\n    throw new Error \"need setting 'tex-command-by-rsgs'\"\n  #.........................................................................................................\n  advance = =>\n    if stretch.length > 0\n      if last_command in [ null, 'latin', ]\n        R.push @TYPO.escape_for_tex stretch.join ''\n      else\n        R.push stretch.join ''\n        R.push '}'\n    stretch.length = 0\n    return null\n  #.........................................................................................................\n  for chr in XNCHR.chrs_from_text text\n    chr_info    = XNCHR.analyze chr\n    { chr\n      uchr\n      fncr\n      rsg   }   = chr_info\n    #.......................................................................................................\n    switch rsg\n      when 'jzr-fig'  then chr = uchr\n      when 'u-pua'    then rsg = 'jzr-fig'\n    #.......................................................................................................\n    if ( replacement = glyph_styles[ chr ] )?\n      advance()\n      R.push replacement\n      last_command = null\n      continue\n    #.......................................................................................................\n    unless ( command = tex_command_by_rsgs[ rsg ] )?\n      warn \"unknown RSG #{rpr rsg}: #{fncr} #{chr}\"\n      advance()\n      stretch.push chr\n      continue\n    #.......................................................................................................\n    if last_command isnt command\n      advance()\n      last_command = command\n      stretch.push \"\\\\#{command}{\" unless command is 'latin'\n    #.......................................................................................................\n    stretch.push chr\n  #.........................................................................................................\n  advance()\n  return R.join ''\n\n# #-----------------------------------------------------------------------------------------------------------\n# @TYPO.cjk_as_tex_text = ( text ) =>\n#   chrs    = XNCHR.chrs_from_text text\n#   R       = []\n#   is_cjk  = ( x ) => /^(u-cjk|u-halfull|u-hang-syl|jzr-fig|u-pua)/.test XNCHR.as_rsg x\n#   for chr in chrs\n#     R.push if ( is_cjk chr ) then ( XELATEX.tag_rpr_from_chr options[ 'glyph-styles' ], chr ) else chr\n#   return R.join ''\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]}