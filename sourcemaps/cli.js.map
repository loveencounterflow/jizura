{"version":3,"sources":["cli.coffee"],"names":[],"mappings":"AAGA;AAAA,MAAA;;EAAA,QAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,MAAA,GAA4B,OAAA,CAAQ,IAAR;;EAE5B,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;;AAa5B;;;;;;;;;;;;;;;;;;EAqBA,GAAA,GAAY,OAAA,CAAQ,WAAR;;EACZ,QAAA,GAAY,OAAO,CAAC,IAAM,CAAA,CAAA;;EAC1B,GAAG,CAAC,OAAJ,CAAY,CAAE,OAAA,CAAQ,iBAAR,CAAF,CAA+B,CAAA,SAAA,CAA3C;;EAGA,YAAA,GACA,iBAAA,GACA,aAAA,GAAgB,SAAE,KAAF,EAAS,QAAT;;MAAS,WAAW;;IAClC,IAAuB,aAAvB;AAAA,aAAO,SAAP;;AACA,WAAO;EAFO;;EAKhB,SAAA,GAAY,SAAE,KAAF,EAAS,QAAT;AACV,QAAA;;MADmB,WAAW;;IAC9B,IAAuB,aAAvB;AAAA,aAAO,SAAP;;IACA,IAAe,KAAA,KAAW,QAAX,IAAA,KAAA,KAAqB,MAArB,IAAA,KAAA,KAA6B,UAA7B,IAAA,KAAA,KAAyC,UAAxD;AAAA,aAAO,KAAP;;IACA,CAAA,GAAI,QAAA,CAAS,KAAT,EAAgB,EAAhB;IACJ,IAAA,CAAA,CAAO,CAAE,CAAA,KAAK,UAAA,CAAW,KAAX,CAAP,CAAA,IAA8B,CAAE,GAAG,CAAC,UAAJ,CAAe,CAAf,CAAF,CAA9B,IAAuD,CAAE,CAAA,IAAK,CAAP,CAA9D,CAAA;AACE,YAAU,IAAA,KAAA,CAAM,sDAAA,GAAsD,CAAC,GAAA,CAAI,KAAJ,CAAD,CAA5D,EADZ;;AAEA,WAAO;EANG;;EASZ,gBAAA,GAAmB,SAAE,KAAF,EAAS,QAAT;AACjB,QAAA;;MAD0B,WAAW;;IACrC,IAAuB,aAAvB;AAAA,aAAO,SAAP;;IACA,IAAmB,KAAA,KAAW,QAAX,IAAA,KAAA,KAAqB,KAArB,IAAA,KAAA,KAA4B,UAA5B,IAAA,KAAA,KAAwC,UAA3D;AAAA,aAAO,SAAP;;IACA,IAAY,GAAG,CAAC,UAAJ,CAAe,CAAE,CAAA,GAAI,QAAA,CAAS,KAAT,EAAgB,EAAhB,CAAN,CAAf,CAAZ;AAAA,aAAO,EAAP;;AACA,WAAO,KAAK,CAAC,IAAN,CAAW,KAAX;EAJU;;EAOnB,iBAAA,GAAoB,SAAE,KAAF,EAAS,QAAT;;MAAS,WAAW;;IACtC,IAAuB,aAAvB;AAAA,aAAO,SAAP;;AACA,WAAO,KAAK,CAAC,IAAN,CAAW,KAAX;EAFW;;EAKpB,UAAA,GAAa,SAAE,KAAF;AACX,QAAA;AAAA;MACE,MAAA,GAAS,MAAM,CAAC,QAAP,CAAgB,KAAhB,EADX;KAAA,cAAA;MAEM;MACJ,IAAgB,KAAK,CAAC,IAAN,KAAc,QAA9B;AAAA,eAAO,MAAP;;AACA,YAAM,MAJR;;AAKA,WAAO,MAAM,CAAC,WAAP,CAAA;EANI;;EAoBb,GACE,CAAC,OADH,CACgB,aADhB,CAEE,CAAC,WAFH,CAEgB,iDAFhB,CAGE,CAAC,MAHH,CAGgB,WAHhB,EAG8B,iBAH9B,CAIE,CAAC,MAJH,CAIgB,YAJhB,EAI8B,kBAJ9B,CAME,CAAC,MANH,CAMU,SAAE,OAAF;AAEN,QAAA;IAAA,OAAA,GAAY,OAAS,CAAA,SAAA;IACrB,OAAA,8CAAoC;IACpC,QAAA,iDAAoC;IAEpC,IAAG,CAAE,CAAI,OAAN,CAAA,IAAoB,CAAE,CAAI,QAAN,CAAvB;AACE,YAAU,IAAA,KAAA,CAAM,uDAAN,EADZ;;IAGA,CAAA,GAAI;MACF,SAAA,OADE;MAEF,SAAA,OAFE;MAGF,UAAA,QAHE;;IAMJ,IAAA,CAAO,GAAG,CAAC,IAAJ,CAAS,EAAA,GAAG,QAAZ,CAAP,EAAmC,GAAG,CAAC,IAAJ,CAAS,aAAT,CAAnC;IACA,GAAA,GAAM,OAAA,CAAQ,yBAAR;WACN,GAAG,CAAC,qBAAJ,CAA0B,CAA1B;EAjBM,CANV;;EA0BA,GACE,CAAC,OADH,CACgB,mBADhB,CAEE,CAAC,WAFH,CAEgB,0BAFhB,CAIE,CAAC,MAJH,CAIU,SAAE,MAAF;AACN,QAAA;IAAA,KAAA,GAAU,OAAA,CAAQ,SAAR;IACV,IAAA,GAAU,OAAA,CAAQ,4BAAR;IACV,MAAA,GAAU,KAAK,CAAC,cAAN,CAAqB,MAArB;IAEV,CAAA,GAAI;MACF,QAAA,MADE;;IAIJ,IAAA,CAAO,GAAG,CAAC,IAAJ,CAAS,EAAA,GAAG,QAAZ,CAAP,EAAmC,GAAG,CAAC,IAAJ,CAAS,UAAT,CAAnC,EAA4D,GAAG,CAAC,IAAJ,CAAS,MAAM,CAAC,IAAP,CAAY,EAAZ,CAAT,CAA5D;WACA,IAAI,CAAC,aAAL,CAAmB,CAAnB;EAVM,CAJV;;EAiBA,GACE,CAAC,OADH,CACgB,sBADhB,CAEE,CAAC,WAFH,CAEgB,2PAFhB,CAQE,CAAC,MARH,CAQU,SAAE,MAAF;AACN,QAAA;IAAA,IAAA,GAAO,OAAA,CAAQ,+CAAR;IAEP,CAAA,GAAI;IAEJ,IAAA,CAAO,GAAG,CAAC,IAAJ,CAAS,EAAA,GAAG,QAAZ,CAAP,EAAmC,GAAG,CAAC,IAAJ,CAAS,sBAAT,CAAnC;WACA,IAAI,CAAC,oBAAL,CAA0B,CAA1B;EANM,CARV;;EAiBA,GAEE,CAAC,OAFH,CAEgB,qBAFhB,CAGE,CAAC,WAHH,CAGgB,gFAHhB,CAIE,CAAC,MAJH,CAIgB,aAJhB,EAI4C,oCAJ5C,CAKE,CAAC,MALH,CAKgB,gBALhB,EAK4C,6DAL5C,CAME,CAAC,MANH,CAMgB,WANhB,EAM4C,0DAN5C,CAOE,CAAC,MAPH,CAOgB,qBAPhB,EAO4C,qDAP5C,CAQE,CAAC,MARH,CAQgB,uBARhB,EAQ4C,yBAR5C,CASE,CAAC,MATH,CASgB,yBAThB,EAS4C,0BAT5C,CAWE,CAAC,MAXH,CAWU,SAAE,YAAF,EAAgB,OAAhB;AACN,QAAA;IAAA,IAAA,CAAO,GAAG,CAAC,KAAJ,CAAU,EAAA,GAAG,QAAb,CAAP,EAAoC,GAAG,CAAC,IAAJ,CAAS,MAAT,CAApC;IAEA,QAAA,GAA8B,YAAA,CAAkB,OAAS,CAAA,OAAA,CAA3B;IAC9B,aAAA,GAA8B,iBAAA,CAAkB,OAAS,CAAA,UAAA,CAA3B;IAC9B,SAAA,GAA8B,aAAA,CAAkB,OAAS,CAAA,KAAA,CAA3B;IAC9B,KAAA,GAA8B,SAAA,CAAkB,OAAS,CAAA,OAAA,CAA3B;IAC9B,YAAA,GAA8B,gBAAA,CAAkB,OAAS,CAAA,QAAA,CAA3B;IAC9B,aAAA,GAA8B,iBAAA,CAAkB,OAAS,CAAA,SAAA,CAA3B;;MAC9B,eAA8B;;IAC9B,YAAA,GAA8B;IAC9B,wBAAA,GAA8B;IAC9B,WAAA,GAA8B;IAC9B,uBAAA,GAA8B;IAE9B,IAAG,aAAA,IAAkB,CAAI,QAAzB;AACE,YAAU,IAAA,KAAA,CAAM,qDAAN,EADZ;;IAEA,IAAG,SAAA,IAAc,CAAI,CAAE,QAAA,IAAa,aAAf,CAArB;AACE,YAAU,IAAA,KAAA,CAAM,wDAAN,EADZ;;IAGA,IAAG,YAAA,KAAgB,QAAnB;MAAyC,gBAAA,GAAmB,MAA5D;KAAA,MACK,IAAG,GAAG,CAAC,UAAJ,CAAe,YAAf,CAAH;MAAoC,gBAAA,GAAmB,GAAA,CAAI,YAAJ,EAAvD;KAAA,MAAA;MACoC,gBAAA,GAAmB,YAAY,CAAC,IAAb,CAAkB,EAAlB,EADvD;;IAEL,GAAA,GAAM,CAAE,IAAA,GAAK,gBAAP;IACN,IAAyC,qBAAzC;MAAA,GAAG,CAAC,IAAJ,CAAS,IAAA,GAAI,CAAC,aAAa,CAAC,IAAd,CAAmB,EAAnB,CAAD,CAAb,EAAA;;IACA,IAAQ,QAAA,IAAa,aAAb,IAA+B,SAAvC;MAAuD,GAAG,CAAC,IAAJ,CAAS,KAAT,EAAvD;KAAA,MACK,IAAG,QAAA,IAAa,aAAhB;MAAkD,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAlD;KAAA,MACA,IAAG,QAAH;MAAkD,GAAG,CAAC,IAAJ,CAAS,GAAT,EAAlD;;IACL,IAAyB,aAAzB;MAAA,GAAG,CAAC,IAAJ,CAAS,IAAA,GAAK,KAAd,EAAA;;IACA,GAAA,GAAM,GAAG,CAAC,IAAJ,CAAS,GAAT;IACN,GAAA,GAAM,OAAA,GAAO,CAAC,GAAG,CAAC,YAAJ,CAAiB,GAAjB,EAAsB,CAAtB,CAAD,CAAP,GAAgC,GAAhC,GAAmC;IAEzC,IAAG,oBAAH;MACE,YAAA,GAAgB,QAAQ,CAAC,OAAT,CAAiB,OAAO,CAAC,GAAR,CAAA,CAAjB,EAAgC,YAAhC;MAChB,IAAA,CAAwD,UAAA,CAAW,YAAX,CAAxD;AAAA,cAAU,IAAA,KAAA,CAAS,YAAD,GAAc,iBAAtB,EAAV;;MACA,YAAA,GAA4B,QAAQ,CAAC,IAAT,CAAc,YAAd,EAA+B,GAAD,GAAK,YAAnC;MAC5B,wBAAA,GAA4B,QAAQ,CAAC,IAAT,CAAc,YAAd,EAA+B,GAAD,GAAK,wBAAnC;MAC5B,IAAG,QAAH;QACE,WAAA,GAA0B,QAAQ,CAAC,IAAT,CAAc,YAAd,EAA+B,GAAD,GAAK,WAAnC;QAC1B,uBAAA,GAA0B,QAAQ,CAAC,IAAT,CAAc,YAAd,EAA+B,GAAD,GAAK,uBAAnC,EAF5B;OALF;;IASA,IAAA,CAAK,6BAAA,GAA8B,GAAnC;IACA,IAAG,oBAAH;MAAwB,IAAA,CAAK,gCAAA,GAAiC,YAAtC,EAAxB;;IACA,IAAG,mBAAH;MAAwB,IAAA,CAAK,gCAAA,GAAiC,WAAtC,EAAxB;;IACA,IAAA,CAAK,kBAAA,GAAkB,CAAC,GAAA,CAAI,YAAJ,CAAD,CAAvB;IACA,IAAG,qBAAH;MAAwB,IAAA,CAAK,WAAA,GAAW,CAAC,aAAa,CAAC,IAAd,CAAmB,EAAnB,CAAD,CAAhB,EAAxB;KAAA,MAAA;MACwB,IAAA,CAAK,8BAAL,EADxB;;IAGA,CAAA,GAAI;MACF,OAAA,EAAS,MADP;MAEF,cAAA,YAFE;MAGF,eAAA,aAHE;MAIF,cAAA,YAJE;MAKF,cAAA,YALE;MAMF,aAAA,WANE;MAOF,0BAAA,wBAPE;MAQF,yBAAA,uBARE;MASF,UAAA,QATE;MAUF,eAAA,aAVE;MAWF,WAAA,SAXE;MAYF,OAAA,KAZE;MAaF,KAAA,GAbE;;IAeJ,YAAA,GAAe,OAAA,CAAQ,gBAAR;WACf,YAAY,CAAC,YAAb,CAA0B,CAA1B;EAhEM,CAXV;;EAgFA,GAAG,CAAC,KAAJ,CAAU,OAAO,CAAC,IAAlB;;EAEA,IAAA,CAAA,gCAAe,CAAE,gBAAV,GAAmB,CAA1B,CAAA;IACE,IAAA,CAAK,mBAAL;IACA,GAAG,CAAC,IAAJ,CAAA,EAFF;;AAnPA","file":"cli.js","sourceRoot":"/source/","sourcesContent":["\n\n############################################################################################################\nnjs_path                  = require 'path'\nnjs_fs                    = require 'fs'\n#...........................................................................................................\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/cli'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n# #...........................................................................................................\n# ƒ                         = CND.format_number.bind CND\n# HELPERS                   = require './HELPERS'\n# # options                   = require './options'\n# TEXLIVEPACKAGEINFO        = require './TEXLIVEPACKAGEINFO'\n# options_route             = '../options.coffee'\n# { CACHE, OPTIONS, }       = require './OPTIONS'\n# SEMVER                    = require 'semver'\n# #...........................................................................................................\n# MKTS                      = require './MKTS'\n\n\n###\n\napp       = require 'commander'\napp_name  = process.argv[ 1 ]\n\napp\n  .version ( require '../package.json' )[ 'version' ]\n  .command 'mkts <filename>'\n  .action ( filename ) ->\n    help ( CND.grey \"#{app_name}\" ), ( CND.gold 'mkts' ), ( CND.lime filename )\n    MKTS = require './mkts-typesetter-interim'\n    CND.dir MKTS\n    MKTS.pdf_from_md filename\n\napp.parse process.argv\n# debug '©nES6R', process.argv\n\n###\n\n\n#-----------------------------------------------------------------------------------------------------------\napp       = require 'commander'\napp_name  = process.argv[ 1 ]\napp.version ( require '../package.json' )[ 'version' ]\n\n#-----------------------------------------------------------------------------------------------------------\nget_do_stats = \\\nget_with_prefixes = \\\nget_two_stats = ( input, fallback = false ) ->\n  return fallback unless input?\n  return input\n\n#-----------------------------------------------------------------------------------------------------------\nget_width = ( input, fallback = null ) ->\n  return fallback unless input?\n  return null if input in [ Infinity, 'full', 'infinity', 'Infinity', ]\n  R = parseInt input, 10\n  unless ( R is parseFloat input ) and ( CND.isa_number R ) and ( R >= 0 )\n    throw new Error \"expected non-negative integer number for width, got #{rpr input}\"\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nget_glyph_sample = ( input, fallback = Infinity ) ->\n  return fallback unless input?\n  return Infinity if input in [ Infinity, 'all', 'infinity', 'Infinity', ]\n  return R if CND.isa_number ( R = parseInt input, 10 )\n  return Array.from input\n\n#-----------------------------------------------------------------------------------------------------------\nget_factor_sample = ( input, fallback = null ) ->\n  return fallback unless input?\n  return Array.from input\n\n#-----------------------------------------------------------------------------------------------------------\nisa_folder = ( route ) ->\n  try\n    fstats = njs_fs.statSync route\n  catch error\n    return false if error.code is 'ENOENT'\n    throw error\n  return fstats.isDirectory()\n\n# #-----------------------------------------------------------------------------------------------------------\n# app\n#   .command      \"mkts <filename>\"\n#   .description  \"typeset MD source in <filename>, output PDF\"\n#   #.........................................................................................................\n#   .action ( filename ) ->\n#     help ( CND.grey \"#{app_name}\" ), ( CND.gold 'mkts' ), ( CND.lime filename )\n#     MKTS = require './mkts-typesetter-interim'\n#     CND.dir MKTS\n#     MKTS.pdf_from_md filename\n\n#-----------------------------------------------------------------------------------------------------------\napp\n  .command      \"repetitions\"\n  .description  \"find repeated components in formulas or lineups\"\n  .option       \"--lineups\",  \"look in lineups\"\n  .option       \"--formulas\", \"look in formulas\"\n  #.........................................................................................................\n  .action ( options ) ->\n    #.......................................................................................................\n    command   = options[ 'command' ]\n    lineups   = options[ 'lineups'  ] ? false\n    formulas  = options[ 'formulas' ] ? false\n    #.......................................................................................................\n    if ( not lineups ) and ( not formulas )\n      throw new Error \"must indicate source (--lineups, --formulas, or both)\"\n    #.......................................................................................................\n    S = {\n      command\n      lineups\n      formulas\n      }\n    #.......................................................................................................\n    help ( CND.grey \"#{app_name}\" ), ( CND.gold 'repetitions' )\n    SRF = require './show-repeated-factors'\n    SRF.show_repeated_factors S\n\n#-----------------------------------------------------------------------------------------------------------\napp\n  .command      \"formulas <glyphs>\"\n  .description  \"dump formulas for glyphs\"\n  #.........................................................................................................\n  .action ( glyphs ) ->\n    XNCHR   = require './XNCHR'\n    DFFG    = require './dump-formulas-for-glyphs'\n    glyphs  = XNCHR.chrs_from_text glyphs\n    #.......................................................................................................\n    S = {\n      glyphs\n      }\n    #.......................................................................................................\n    help ( CND.grey \"#{app_name}\" ), ( CND.gold 'formulas' ), ( CND.lime glyphs.join '' )\n    DFFG.dump_formulas S\n\n#-----------------------------------------------------------------------------------------------------------\napp\n  .command      \"consolidate-formulas\"\n  .description  \"\"\"\n    consolidate formulas from `shape-breakdown-formula.txt`\n    and `shape-breakdown-formula-corrections.txt`\n    into new source file `shape-breakdown-formula-merged.txt`. Notice that the\n    formulas in `shape-breakdown-formula-naive.txt` will *not* be merged.\"\"\"\n  #.........................................................................................................\n  .action ( glyphs ) ->\n    COCF = require './consolidate-original-and-corrected-formulas'\n    #.......................................................................................................\n    S = {}\n    #.......................................................................................................\n    help ( CND.grey \"#{app_name}\" ), ( CND.gold 'consolidate-formulas' )\n    COCF.consolidate_formulas S\n\n#-----------------------------------------------------------------------------------------------------------\napp\n  #.........................................................................................................\n  .command      \"kwic [output_route]\"\n  .description  \"render (excerpt of) KWIC index (to output_route where given; must be a folder)\"\n  .option       \"-s, --stats\",              \"show KWIC infix statistics [false]\"\n  .option       \"-p, --prefixes\",           \"infix statistics to include prefixes (only with -s) [false]\"\n  .option       \"-2, --two\",                \"separate prefix and suffix stats (only with -sp) [false]\"\n  .option       \"-w, --width [count]\",      \"maximum number of glyphs in infix statistics [full]\"\n  .option       \"-g, --glyphs [glyphs]\",    \"which glyphs to include\"\n  .option       \"-f, --factors [factors]\",  \"which factors to include\"\n  #.........................................................................................................\n  .action ( output_route, options ) ->\n    help ( CND.white \"#{app_name}\" ), ( CND.gold 'kwic' )#, ( CND.lime glyphs_route )\n    #.......................................................................................................\n    do_stats                    = get_do_stats      options[ 'stats'    ]\n    with_prefixes               = get_with_prefixes options[ 'prefixes' ]\n    two_stats                   = get_two_stats     options[ 'two'      ]\n    width                       = get_width         options[ 'width'    ]\n    glyph_sample                = get_glyph_sample  options[ 'glyphs'   ]\n    factor_sample               = get_factor_sample options[ 'factors'  ]\n    output_route               ?= null\n    glyphs_route                = null\n    glyphs_description_route    = null\n    stats_route                 = null\n    stats_description_route     = null\n    #.......................................................................................................\n    if with_prefixes and not do_stats\n      throw new Error \"switch -p (--prefixes) only valid with -s (--stats)\"\n    if two_stats and not ( do_stats and with_prefixes )\n      throw new Error \"switch -2 only valid with -sp (--prefixes and --stats)\"\n    #.......................................................................................................\n    if glyph_sample is Infinity         then glyph_sample_key = 'all'\n    else if CND.isa_number glyph_sample then glyph_sample_key = rpr glyph_sample\n    else                                     glyph_sample_key = glyph_sample.join ''\n    key = [ \"g.#{glyph_sample_key}\", ]\n    key.push \"f.#{factor_sample.join ''}\" if factor_sample?\n    if      do_stats and with_prefixes and two_stats  then key.push \"sp2\"\n    else if do_stats and with_prefixes                then key.push \"sp\"\n    else if do_stats                                  then key.push \"s\"\n    key.push \"w.#{width}\" if width?\n    key = key.join '-'\n    key = \"kwic-#{CND.id_from_text key, 4}-#{key}\"\n    #.......................................................................................................\n    if output_route?\n      output_route  = njs_path.resolve process.cwd(), output_route\n      throw new Error \"#{output_route}:\\nnot a folder\" unless isa_folder output_route\n      glyphs_route              = njs_path.join output_route, \"#{key}-glyphs.md\"\n      glyphs_description_route  = njs_path.join output_route, \"#{key}-glyphs-description.md\"\n      if do_stats\n        stats_route             = njs_path.join output_route, \"#{key}-stats.md\"\n        stats_description_route = njs_path.join output_route, \"#{key}-stats-description.md\"\n    #.......................................................................................................\n    help \"key for this collection is #{key}\"\n    if output_route? then   help \"KWIC index will be written to #{glyphs_route}\"\n    if stats_route? then    help \"statistics will be written to #{stats_route}\"\n    help \"glyph_sample is #{rpr glyph_sample}\"\n    if factor_sample? then  help \"factors: #{factor_sample.join ''}\"\n    else                    help \"all factors will be included\"\n    #.......................................................................................................\n    S = {\n      command: 'kwic'\n      glyph_sample\n      factor_sample\n      output_route\n      glyphs_route\n      stats_route\n      glyphs_description_route\n      stats_description_route\n      do_stats\n      with_prefixes\n      two_stats\n      width\n      key                       }\n    #.......................................................................................................\n    SHOW_KWIC_V3 = require './show-kwic-v3'\n    SHOW_KWIC_V3.show_kwic_v3 S\n\n\n############################################################################################################\n# app.on '--help', -> info \"here's the rundown\"\napp.parse process.argv\n\nunless app.args?.length > 0\n  warn \"missing arguments\"\n  app.help()\n"]}