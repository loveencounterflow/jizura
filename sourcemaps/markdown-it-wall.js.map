{"version":3,"sources":["markdown-it-wall.coffee"],"names":[],"mappings":"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","file":"markdown-it-wall.js","sourceRoot":"/source/","sourcesContent":["# fences (``` lang, ~~~ lang)\n'use strict'\n\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'JIZURA/markdown-it-wall'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\n\n\nmodule.exports = (state, startLine, endLine, silent) ->\n  marker = undefined\n  len = undefined\n  params = undefined\n  nextLine = undefined\n  mem = undefined\n  token = undefined\n  markup = undefined\n  haveEndMarker = false\n  debug 'Â©fa4Vl', 'WALL'\n  # CND.dir state\n  pos = state.bMarks[startLine] + state.tShift[startLine]\n  max = state.eMarks[startLine]\n  if pos + 3 > max\n    return false\n  marker = state.src.charCodeAt(pos)\n\n    # case 0x0A/* \\n */:\n    # case 0x21/* ! */:\n    # case 0x23/* # */:\n    # case 0x24/* $ */:\n    # case 0x25/* % */:\n    # case 0x26/* & */:\n    # case 0x2A/* * */:\n    # case 0x2B/* + */:\n    # case 0x2D/* - */:\n    # case 0x3A/* : */:\n    # case 0x3C/* < */:\n    # case 0x3D/* = */:\n    # case 0x3E/* > */:\n    # case 0x40/* @ */:\n    # case 0x5B/* [ */:\n    # case 0x5C/* \\ */:\n    # case 0x5D/* ] */:\n    # case 0x5E/* ^ */:\n    # case 0x5F/* _ */:\n    # case 0x60/* ` */:\n    # case 0x7B/* { */:\n    # case 0x7D/* } */:\n    # case 0x7E/* ~ */:\n\n  # ### ~, ` ###\n  # if marker != 0x7E and marker != 0x60\n  if marker != 0x40 # @ #\n    return false\n  # scan marker length\n  mem = pos\n  pos = state.skipChars(pos, marker)\n  len = pos - mem\n  if len < 3\n    return false\n  markup = state.src.slice(mem, pos)\n  params = state.src.slice(pos, max)\n  if params.indexOf('@') >= 0\n    return false\n  # Since start is found, we can report success here in validation mode\n  if silent\n    return true\n  # search end of block\n  nextLine = startLine\n  loop\n    nextLine++\n    if nextLine >= endLine\n      # unclosed block should be autoclosed by end of document.\n      # also block seems to be autoclosed by end of parent\n      break\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n    CND.dir state\n    if pos < max and state.sCount[nextLine] < state.blkIndent\n      # non-empty line with negative indent should stop the list:\n      # - ```\n      #  test\n      break\n    if state.src.charCodeAt(pos) != marker\n      continue\n    if state.sCount[nextLine] - (state.blkIndent) >= 4\n      # closing fence should be indented less than 4 spaces\n      continue\n    pos = state.skipChars(pos, marker)\n    # closing code fence must be at least as long as the opening one\n    if pos - mem < len\n      continue\n    # make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n    if pos < max\n      continue\n    haveEndMarker = true\n    # found!\n    break\n  # If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n  state.line = nextLine + (if haveEndMarker then 1 else 0)\n  token = state.push('fence', 'code', 0)\n  token.info = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup = markup\n  token.map = [\n    startLine\n    state.line\n  ]\n  true\n\n"]}